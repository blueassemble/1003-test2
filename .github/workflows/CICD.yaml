# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  #workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    #steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      #- uses: actions/checkout@v2
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
           distribution: 'temurin' # See 'Supported distributions' for available options
           java-version: '11'
           cache: 'gradle'
      - run: chmod +x ./gradlew
      #- run: ./my-spring-board/gradlew clean
      - run: ./gradlew build
      - uses: actions/upload-artifact@v2
        with:
          name: WAR
          path: build/libs

      - uses: actions/download-artifact@v2
        with:
          name: WAR
      - run: ls -R
      - run: touch dockerfile
      - run: |   
          cat <<EOF > dockerfile
          FROM tomcat:9.0
          COPY ./my-spring-board-0.0.1-SNAPSHOT.war /usr/local/tomcat/webapps/ROOT.war
          EXPOSE 8080
          EOF
      #- run: docker images
      #- name: login dockerhub
      #  uses: docker/login-action@v1.10.0
      #  with:
      #    username: ${{ secrets.DOCKERHUB_ID }}
      #    password: ${{ secrets.DOCKERHUB_PW }}
      
      #- name: Build and push
      #  uses: docker/build-push-action@v2
      #  with:
      #    context: .
      #    push: true
      #    tags: blueassemble/0930:test-ver1